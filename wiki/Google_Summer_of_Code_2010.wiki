#summary Project Ideas for Google Summer of Code 2010

<wiki:toc max_depth="2" />

= Introduction =
This page contains a list of ideas for the [http://code.google.com/soc/ GSoC]-Program. We hope to achieve through participation in the GSoC the following goals:
 * Continuing the development of the [http://code.google.com/p/ringmap/ ringmap] Project
 * Porting the ringmap codebase to new, different hardware architectures
 * Implementing new features into ringmap


= 1. Porting ringmap to 10GbE Intel Network Adapters =

Technical Contact: [http://www.net.t-labs.tu-berlin.de/people/jan.shtml Jan Böttger]

==== Motivation ====
Transfer rates of 10Gbit/sec are a common reality. The specialized hardware required for traffic monitoring and packet capturing at such high data rates remains very expensive. At these rates, comodity hardware is no longer capable of capturing packets without high loss rates. The limiting factors are not only dependent on hardware performance, but also due to inefficiencies in the software capturing stack implementations.

In the context of the [http://code.google.com/p/ringmap/ ringmap Project], we have developed a brand new packet capturing stack, based on the *[http://www.freebsd.org/cgi/man.cgi?query=em&manpath=FreeBSD+8.0-RELEASE em]*-driver and the *[http://www.freebsd.org/cgi/man.cgi?query=pcap&manpath=FreeBSD+8.0-RELEASE libcap]* library. The ringmap capturing stack already allows for efficient capturing at 1GBit/sec with very low packet loss rates (under 0.02%) and low system load (under 12%). Under similar conditions, the standard capturing software under FreeBSD-7 would generate a system load close to 100% and result in close to 100% packet loss.

==== Goal ====
The *ringmap* software stack is momentarily usable only with Intel 1Gb Ethernet Adapters (See Requirements: [http://code.google.com/p/ringmap/wiki/Overview#Requirements]). Our goal is therefore, to modify the ringmap capturing stack for the 10Gb Ethernet Intel network adapter. The following will be expected from the student:
 * Understand and analyze of the code from *[http://www.freebsd.org/cgi/man.cgi?query=ixgb&manpath=FreeBSD+8.0-RELEASE ixgb]* and the *ringmap* driver
 * Porting of the *ringmap* code to *ixgb*
 * Extensive documentation of the complete work

The hardware infrastructure and testebed for implementation and testing will be provided by the department of Intelligent Networks at TU-Berlin, [http://www.net.t-labs.tu-berlin.de/ FG INET]

==== Requirements ====
 * Strong knowledge of C.
 * Understanding of BSD kernel programming and debugging.


= 2. Porting the ringmap capturing stack to FreeBSD-8 =

Technical Contact: [http://www.net.t-labs.tu-berlin.de/people/jan.shtml Jan Böttger]

==== Goal ====
At the present time, *ringmap* can be run only on FreeBSD-*7.x*. Our task here would be to port the existing code base to FreeBSD-*8.x*. The porting effort would involve both the driver and libpcap source code, with a stronger emphasis on libpcap. The student is also expected to conduct a full performance analysis and evaluation between the standard packet capturing stack of FreeBSD-*8* and *ringmap*. The hardware infrastructure and testbed for implementation and testing will be provided by the department of Intelligent Networks at TU-Berlin, [http://www.net.t-labs.tu-berlin.de/ FG INET]  

==== Requirements ====
 * Strong knowledge of C.
 * Understanding the libpcap.  
 * Understanding of BSD kernel programming.

  
= 3. Implementing Load-Balancing functionality for ixgb driver =

Technical Contact: Robin Sommer

...